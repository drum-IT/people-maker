// import Experience from "../progression/experience";
// import Skill from "./skill";
// import Stat from "./stat";
import Personality from "./personality/personality";

import util from "../util/util";

class Employee {
  constructor() {
    this.name = Employee.getNormalName();
    this.birthdate = Employee.generateBirthdate();
    this.personality = new Personality();
  }
}

Employee.generateBirthdate = () => {
  // this array is used to weight the random age generation
  // each entry grants that range a 10% chance of selection
  const ranges = [
    [16, 19],
    [16, 19],
    [16, 19],
    [20, 24],
    [20, 24],
    [20, 24],
    [25, 70],
    [25, 70],
    [25, 70],
    [25, 70]
  ];
  // get a random range
  const range = ranges[Math.floor(Math.random() * ranges.length)];
  // get an age (in years) in the range
  // const age = util.getRandomInt(range) * 31556952000;
  const age = util.getRandomInt([1, 110]) * 31556952000;
  // create a date object by subtrating the age from today's date
  const birthdate = new Date(Date.now() - age);
  // return the birthdate
  return birthdate;
};

const normalNameData = {
  firstName1: [
    "Danny",
    "Catie",
    "Jeff",
    "Dave",
    "Jinete",
    "Dom",
    "Geo",
    "Lon",
    "Bra",
    "Russ",
    "Tyr",
    "Her",
    "Laz",
    "Geo",
    "Cle",
    "Oren",
    "Aus",
    "Gen",
    "Ron",
    "Gra",
    "For",
    "Sta",
    "Ear",
    "Rick",
    "Jes",
    "Wel",
    "Jeff",
    "Mal",
    "Cha",
    "Burl",
    "Dar",
    "Joey",
    "Rol",
    "Dea",
    "Jef",
    "Gua",
    "Jed",
    "Irw",
    "Neil",
    "Don",
    "For",
    "Gene",
    "Jer",
    "Joh",
    "Emm",
    "Sco",
    "Jer",
    "Aur",
    "Matt",
    "Nor",
    "Dar",
    "Josh",
    "Mon",
    "Gle",
    "Cle",
    "Adi",
    "Min",
    "Hal",
    "Mea",
    "Dom",
    "Gra",
    "Kec",
    "Esta",
    "Sari",
    "Ila",
    "She",
    "Ari",
    "Way",
    "Mimi",
    "Sca",
    "Let",
    "Dus",
    "Mac",
    "Nida",
    "Bev",
    "Joi",
    "Mar",
    "Lia",
    "Fre",
    "Eus",
    "Ard",
    "Chr",
    "Arm",
    "Sol",
    "Jac",
    "Kar",
    "Nor",
    "Bar",
    "Tre",
    "Zack",
    "Den",
    "Luci",
    "Dar",
    "Kai",
    "She",
    "Dar",
    "Cel",
    "Jon",
    "Lav",
    "Tu",
    "Wil",
    "Cle",
    "Car",
    "Cyn",
    "Tra",
    "Jim",
    "Del",
    "Mau",
    "Long",
    "Kir",
    "Luke",
    "Efr",
    "The",
    "Teri",
    "Yad",
    "Cho",
    "Ver",
    "Lis",
    "Del",
    "Sel",
    "Mar",
    "Wen",
    "Rus",
    "Elli",
    "Sam",
    "Che",
    "Pau",
    "Jos",
    "Bess",
    "Nat",
    "Cin",
    "Alo",
    "Many",
    "Ann",
    "Bri",
    "Bea",
    "Syb",
    "Don",
    "Arl",
    "Lan",
    "Laci",
    "Ade",
    "Lat",
    "Esta",
    "Las",
    "Ang",
    "Ton",
    "Nak",
    "Sol",
    "Lov",
    "Mea",
    "Meg",
    "Kati",
    "Jac",
    "Dan",
    "Max",
    "Raf",
    "Arr",
    "Dan",
    "Edu",
    "Mau",
    "Oli",
    "Ant",
    "Ian",
    "Low",
    "Ben",
    "Gale",
    "Ral",
    "Jame",
    "Sha",
    "Leif",
    "Mel",
    "Ron",
    "Wil",
    "Ern",
    "Hung",
    "Phi",
    "May",
    "Kory",
    "Gay",
    "Byr",
    "Pat",
    "Tra",
    "Law",
    "Chr",
    "Cha",
    "Mil",
    "Gre",
    "Ker",
    "Shon",
    "Ale",
    "Den",
    "Mic",
    "Ben",
    "Sal",
    "Mic",
    "Mar",
    "Mck",
    "Cory",
    "Tha",
    "Eug",
    "Fer",
    "Don",
    "Gary",
    "Sean",
    "Sun",
    "Gle",
    "Bry",
    "Bree",
    "Agn",
    "Muoi",
    "Jea",
    "Kat",
    "Nic",
    "Leo",
    "Kha",
    "Bok",
    "Bru",
    "Hed",
    "Joa",
    "Sad",
    "Cle",
    "Fer",
    "Yael",
    "Ali",
    "Ton",
    "Zona",
    "Cris",
    "Fan",
    "Maj",
    "Nic",
    "Mar",
    "Ela",
    "Sha",
    "Cha",
    "Ver",
    "Ber",
    "Law",
    "She",
    "Sha",
    "Mar",
    "Del",
    "Ros",
    "Den",
    "Rina",
    "Gra",
    "Kiz",
    "Ros",
    "Ras",
    "Bev",
    "Sau",
    "Ser",
    "Yos",
    "Eli",
    "Elv"
  ],
  firstName2: [
    "ingo",
    "ffrey",
    "ndon",
    "on",
    "iberto",
    "aro",
    "rge",
    "tus",
    "tin",
    "aro",
    "ald",
    "ig",
    "est",
    "nley",
    "le",
    "se",
    "don",
    "colm",
    "rlie",
    "rell",
    "land",
    "ngelo",
    "frey",
    "dalupe",
    "in",
    "ny",
    "rest",
    "ome",
    "nie",
    "itt",
    "tt",
    "maine",
    "elio",
    "ris",
    "ren",
    "ty",
    "nn",
    "veland",
    "na",
    "di",
    "ey",
    "gan",
    "inque",
    "dy",
    "ia",
    "na",
    "rril",
    "ana",
    "ne",
    "rlet",
    "ha",
    "ti",
    "erlee",
    "leen",
    "ne",
    "deric",
    "ebio",
    "is",
    "issy",
    "ida",
    "ange",
    "quelynn",
    "lyn",
    "ine",
    "bie",
    "asa",
    "is",
    "rell",
    "tlyn",
    "ridan",
    "win",
    "ena",
    "ell",
    "ina",
    "fred",
    "opatra",
    "olina",
    "thia",
    "cey",
    "my",
    "icia",
    "de",
    "stie",
    "ain",
    "ola",
    "ira",
    "ng",
    "die",
    "ha",
    "fina",
    "ma",
    "grett",
    "ona",
    "sel",
    "antha",
    "ree",
    "lina",
    "elyn",
    "halie",
    "di",
    "na",
    "ett",
    "tta",
    "il",
    "ette",
    "ie",
    "ita",
    "laida",
    "icia",
    "hawnda",
    "le",
    "ita",
    "ia",
    "edad",
    "ie",
    "ghan",
    "an",
    "elyn",
    "ille",
    "well",
    "ael",
    "on",
    "ial",
    "ardo",
    "ro",
    "ver",
    "hony",
    "ell",
    "ton",
    "ph",
    "yne",
    "ny",
    "lis",
    "ie",
    "lip",
    "nard",
    "le",
    "on",
    "ricia",
    "cey",
    "rence",
    "is",
    "uncey",
    "lard",
    "gory",
    "mit",
    "xis",
    "ny",
    "heal",
    "ito",
    "vatore",
    "hael",
    "ia",
    "inley",
    "nh",
    "enio",
    "min",
    "ovan",
    "ni",
    "nnis",
    "nn",
    "es",
    "na",
    "hryne",
    "ola",
    "nila",
    "lilah",
    "nilda",
    "wig",
    "nnie",
    "ie",
    "mencia",
    "nanda",
    "sia",
    "ia",
    "nie",
    "orie",
    "ki",
    "garette",
    "ina",
    "wna",
    "rolette",
    "lie",
    "nadine",
    "ana",
    "lia",
    "nnan",
    "dell",
    "ana",
    "ella",
    "yse",
    "ciela",
    "zy",
    "aria",
    "heeda",
    "erly",
    "ndra",
    "ita",
    "hiko",
    "cia",
    "ia"
  ],
  lastName1: [
    "Pratt",
    "Kamps",
    "Kolter",
    "Painchaud",
    "Secreto",
    "Cen",
    "Fog",
    "Bor",
    "Pay",
    "Heg",
    "Hod",
    "Lin",
    "Bra",
    "Kre",
    "Hep",
    "Cota",
    "Cir",
    "Min",
    "Bri",
    "Mac",
    "Rou",
    "Odr",
    "Sil",
    "Har",
    "Roy",
    "Loeb",
    "Ruf",
    "Rap",
    "Gru",
    "Bath",
    "Wade",
    "Beh",
    "Mar",
    "Wor",
    "Has",
    "Rip",
    "Mei",
    "Jain",
    "Fra",
    "Kir",
    "Eri",
    "Woo",
    "Sch",
    "Mos",
    "Fine",
    "Tas",
    "Car",
    "Sha",
    "Rim",
    "Car",
    "Vie",
    "Mil",
    "Fet",
    "Wes",
    "Val",
    "Fulk",
    "Ban",
    "Bor",
    "Kop",
    "Fer",
    "Kil",
    "Urm",
    "Sha",
    "Kuc",
    "Bel",
    "Wie",
    "Spe",
    "Con",
    "Gri",
    "Rit",
    "Col",
    "Luc",
    "Lup",
    "Mcc",
    "Deh",
    "Rom",
    "Mum",
    "Fun",
    "Bra",
    "Can",
    "Honn",
    "Hos",
    "Tho",
    "Mus",
    "Old",
    "Fun",
    "Qui",
    "Jun",
    "Bar",
    "Bar",
    "Cat",
    "Pra",
    "Cog",
    "Mah",
    "Tung",
    "Lei",
    "Mcc",
    "Bel",
    "Hag",
    "Sea",
    "Huff",
    "Gil",
    "Mon",
    "Bur",
    "Sum",
    "Hal",
    "Jim",
    "Get",
    "Las",
    "Oce",
    "Pog",
    "Los",
    "Mei",
    "Rab",
    "Tin",
    "Pey",
    "Kys",
    "Les",
    "Bar",
    "Cor",
    "Wil",
    "Ors",
    "Bar",
    "Blo",
    "Hed",
    "Fil",
    "Dab",
    "Glo",
    "Nas",
    "Sau",
    "She",
    "Ell",
    "She",
    "Heg",
    "Con",
    "Exl",
    "Ye",
    "Kop",
    "Lya",
    "Fim",
    "Bea",
    "Dong",
    "Hos",
    "Cag",
    "Pac",
    "Cro",
    "Roh",
    "Hei",
    "Hef",
    "Der",
    "Dev",
    "Col",
    "Rem",
    "Van",
    "Lea",
    "Hui",
    "Bow",
    "Kapp",
    "Huse",
    "Seel",
    "Roc",
    "Wal",
    "Har",
    "Qua",
    "Sch",
    "Sau",
    "Her",
    "Pin",
    "Cla",
    "May",
    "Bar",
    "Hin",
    "Ste",
    "Gon",
    "Cain",
    "Avi",
    "Vin",
    "Emi",
    "Oda",
    "War",
    "Haf",
    "Del",
    "Nut",
    "Tow",
    "Gri",
    "Meas",
    "Del",
    "Bor",
    "May",
    "Own",
    "Raf",
    "Bla",
    "Gam",
    "Col",
    "Ple",
    "Kle",
    "Hoak",
    "Pro",
    "Eny",
    "Arn",
    "Fle",
    "Fer",
    "Bal",
    "Dom",
    "Dur",
    "Whe",
    "Duc",
    "Dev",
    "Cop",
    "Til",
    "Hag",
    "Buc",
    "Ell",
    "Kahl",
    "Gro",
    "Tem",
    "Pep",
    "Duf",
    "Mcg",
    "Hart",
    "Pee",
    "Win",
    "Goe",
    "Tic",
    "Win",
    "Bon",
    "Rul",
    "Gai",
    "Sam",
    "Weh",
    "Ant",
    "Pate",
    "Swo",
    "San",
    "Byr",
    "Ars",
    "Sat",
    "Cas",
    "Para",
    "Ran",
    "Lue",
    "Bar",
    "Yan",
    "Ran",
    "Fri",
    "Wea",
    "Dis",
    "Mcg",
    "Mcc",
    "Ste",
    "Mcc",
    "Mur",
    "Bri",
    "Chr",
    "Sea"
  ],
  lastName2: [
    "dejas",
    "el",
    "mann",
    "an",
    "er",
    "es",
    "hart",
    "ddy",
    "tschmer",
    "pner",
    "cle",
    "gus",
    "mage",
    "ek",
    "sh",
    "iscoll",
    "verman",
    "shman",
    "ster",
    "fin",
    "paport",
    "bb",
    "rens",
    "otta",
    "rall",
    "lem",
    "pel",
    "sner",
    "nklin",
    "chner",
    "ksson",
    "den",
    "eff",
    "cato",
    "sin",
    "rell",
    "wgo",
    "es",
    "one",
    "yra",
    "lsap",
    "tig",
    "tberg",
    "enzuela",
    "gert",
    "ton",
    "rowski",
    "rera",
    "burn",
    "an",
    "rlow",
    "harski",
    "anger",
    "chmann",
    "no",
    "die",
    "sham",
    "er",
    "ucci",
    "ht",
    "pino",
    "arter",
    "art",
    "ine",
    "ma",
    "chess",
    "dburn",
    "delario",
    "ley",
    "rnberry",
    "selwhite",
    "aker",
    "derburke",
    "rk",
    "ker",
    "ahona",
    "sh",
    "ron",
    "tts",
    "hlan",
    "affey",
    "bowitz",
    "lusky",
    "cher",
    "ans",
    "berg",
    "lmore",
    "tez",
    "chard",
    "merall",
    "liday",
    "merson",
    "tinger",
    "well",
    "guera",
    "ue",
    "oya",
    "dinger",
    "in",
    "dall",
    "ton",
    "er",
    "sley",
    "tell",
    "ner",
    "laert",
    "ini",
    "tlebaugh",
    "mberg",
    "gpeth",
    "kins",
    "ney",
    "wacki",
    "sar",
    "ls",
    "rrow",
    "efson",
    "ckler",
    "wood",
    "way",
    "ine",
    "rowski",
    "ll",
    "bres",
    "trice",
    "ein",
    "le",
    "ifico",
    "wner",
    "man",
    "se",
    "fner",
    "byshire",
    "itt",
    "lis",
    "pe",
    "pelt",
    "ke",
    "ley",
    "kwell",
    "ler",
    "ber",
    "shie",
    "midt",
    "ers",
    "rington",
    "nell",
    "ybrooks",
    "nor",
    "rera",
    "man",
    "inmetz",
    "soulin",
    "na",
    "eyard",
    "gh",
    "ren",
    "fner",
    "aughter",
    "ting",
    "le",
    "dley",
    "ancey",
    "ing",
    "oral",
    "by",
    "tery",
    "ttner",
    "ber",
    "pitts",
    "as",
    "ckner",
    "chnow",
    "eart",
    "hold",
    "ig",
    "ry",
    "lou",
    "ino",
    "kin",
    "atley",
    "los",
    "aul",
    "pock",
    "lison",
    "gins",
    "ci",
    "ard",
    "te",
    "pleton",
    "linski",
    "fey",
    "rath",
    "ts",
    "chell",
    "wey",
    "kle",
    "ston",
    "dy",
    "and",
    "ter",
    "meyer",
    "illa",
    "boda",
    "toyo",
    "ne",
    "enault",
    "erfiel",
    "sano",
    "dol",
    "dtke",
    "row",
    "tis",
    "ieri",
    "edel",
    "se",
    "hon",
    "lynn",
    "arville",
    "inberg",
    "ourt",
    "ray",
    "tton",
    "istmas",
    "go"
  ]
};

Employee.getNormalName = () => {
  let employeeName = [];
  employeeName.push(
    normalNameData.firstName1[
      Math.floor(Math.random() * normalNameData.firstName1.length)
    ]
  );
  if (employeeName[0].length < 4) {
    employeeName.push(
      normalNameData.firstName2[
        Math.floor(Math.random() * normalNameData.firstName2.length)
      ]
    );
  }
  employeeName.push(" ");
  employeeName.push(
    normalNameData.lastName1[
      Math.floor(Math.random() * normalNameData.lastName1.length)
    ]
  );
  if (employeeName[employeeName.length - 1].length < 4) {
    employeeName.push(
      normalNameData.lastName2[
        Math.floor(Math.random() * normalNameData.lastName2.length)
      ]
    );
  }
  return employeeName.join("");
};

module.exports = Employee;
